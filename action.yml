name: 'mobsfscan'
author: 'Ajin Abraham <ajin@opensecurity.in>'
description: 'mobsfscan is a SAST that can find insecure code patterns in your Android and iOS source code.'
branding:
  icon: 'code'
  color: 'blue'

inputs:
  args:
    description: |
      positional arguments:
        path                  Path can be file(s) or directories with source code

      optional arguments:
        -h, --help            show this help message and exit
        --json                set output format as JSON
        --sarif               set output format as SARIF 2.1.0
        --sonarqube           set output format compatible with SonarQube
        --html                set output format as HTML
        --type {android,ios,auto}
                              optional: force android or ios rules explicitly
        -o OUTPUT, --output OUTPUT
                              output filename to save the result
        -c CONFIG, --config CONFIG
                              location to .mobsf config file
        -mp {default,billiard,thread}, --multiprocessing {default,billiard,thread}
                              optional: specify multiprocessing strategy
        -w, --exit-warning    non zero exit code on warning
        --no-fail             force zero exit code, takes precedence over --exit-warning
        -v, --version         show mobsfscan version
    required: true

runs:
  using: "composite"
  steps:
    - shell: bash
      run: |
        echo "::group::Installing mobsfscan dependencies"
        python3 -m pip install -r ${{ github.action_path }}/requirements.txt
        echo "::endgroup::"

    - shell: bash
      run: |
        PYTHONPATH=${{ github.action_path }} && export PYTHONPATH=${{ github.action_path }}
        echo "Running mobsfscan..."
        python3 -m mobsfscan ${{ inputs.args }}
        echo "Finished"
